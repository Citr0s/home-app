// <auto-generated />
using System;
using HomeBoxLanding.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeBoxLanding.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231110221230_CreateFuelPriceTable")]
    partial class CreateFuelPriceTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeBoxLanding.Api.Features.Builds.Types.BuildRecord", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Conclusion")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GithubBuildReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Identifier");

                    b.ToTable("Builds");
                });

            modelBuilder.Entity("HomeBoxLanding.Api.Features.Deploys.Types.DeployRecord", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CommitId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Identifier");

                    b.ToTable("Deploys");
                });

            modelBuilder.Entity("HomeBoxLanding.Api.Features.FuelPricePoller.Types.FuelPriceRecord", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Diesel_B7_Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Petrol_E10_Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Petrol_E5_Price")
                        .HasColumnType("double precision");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Provider")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Identifier");

                    b.ToTable("FuelPrices");
                });

            modelBuilder.Entity("HomeBoxLanding.Api.Features.Links.Types.LinkRecord", b =>
                {
                    b.Property<Guid>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSecure")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Identifier");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Identifier = new Guid("486b4055-a00e-4ca0-ac0e-762b313d19e4"),
                            Category = "media",
                            Host = "192.168.1.74",
                            IconUrl = "./assets/plex-logo.png",
                            IsSecure = false,
                            Name = "Plex",
                            Port = 32400,
                            SortOrder = "A",
                            Url = "http://192.168.1.74:32400/"
                        },
                        new
                        {
                            Identifier = new Guid("4aa3a74d-d6fd-4f19-9c1e-0add45b9706b"),
                            Category = "media",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/overseerr-logo.png",
                            IsSecure = false,
                            Name = "Overseerr",
                            Port = 5055,
                            SortOrder = "B",
                            Url = "http://192.168.1.161:5055/"
                        },
                        new
                        {
                            Identifier = new Guid("fe8404e6-76c2-48d7-9f98-2e761acfe111"),
                            Category = "media",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/radarr-logo.png",
                            IsSecure = false,
                            Name = "Radarr",
                            Port = 7878,
                            SortOrder = "C",
                            Url = "http://192.168.1.25:7878/"
                        },
                        new
                        {
                            Identifier = new Guid("4fe20495-39ec-4244-963f-68edcbab07b0"),
                            Category = "media",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/sonarr-logo.png",
                            IsSecure = false,
                            Name = "Sonarr",
                            Port = 8989,
                            SortOrder = "D",
                            Url = "http://192.168.1.25:8989/"
                        },
                        new
                        {
                            Identifier = new Guid("1cf21ed6-25f9-434b-8e8c-aae6551ecc8a"),
                            Category = "media",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/xteve-logo.png",
                            IsSecure = false,
                            Name = "xTeve",
                            Port = 34400,
                            SortOrder = "E",
                            Url = "http://192.168.1.25:34400/web/"
                        },
                        new
                        {
                            Identifier = new Guid("f21569e9-ddc7-452b-9895-95f0d4c3d830"),
                            Category = "productivity",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/mealie-logo.png",
                            IsSecure = false,
                            Name = "Mealie",
                            Port = 9091,
                            SortOrder = "F",
                            Url = "http://192.168.1.161:9091/"
                        },
                        new
                        {
                            Identifier = new Guid("722b94e0-fe96-467a-89de-e6253cbea428"),
                            Category = "productivity",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/planka-logo.png",
                            IsSecure = false,
                            Name = "Planka",
                            Port = 9096,
                            SortOrder = "G",
                            Url = "http://192.168.1.161:9096/"
                        },
                        new
                        {
                            Identifier = new Guid("952b7803-c4d4-4584-a606-790a6b010dfc"),
                            Category = "productivity",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/trilium-logo.png",
                            IsSecure = false,
                            Name = "Trilium",
                            Port = 9095,
                            SortOrder = "H",
                            Url = "http://192.168.1.161:9095/"
                        },
                        new
                        {
                            Identifier = new Guid("c37a1212-3130-40e5-b16e-6b77b3ef828f"),
                            Category = "productivity",
                            Host = "192.168.1.35",
                            IconUrl = "./assets/octopi-logo.png",
                            IsSecure = false,
                            Name = "OctoPi",
                            Port = 80,
                            SortOrder = "I",
                            Url = "http://192.168.1.35/"
                        },
                        new
                        {
                            Identifier = new Guid("f1efac98-0833-45ee-a189-4a7619d7c98b"),
                            Category = "productivity",
                            Host = "192.168.1.142",
                            IconUrl = "./assets/mattermost-logo.png",
                            IsSecure = false,
                            Name = "Mattermost",
                            Port = 8065,
                            SortOrder = "J",
                            Url = "http://192.168.1.142:8065/"
                        },
                        new
                        {
                            Identifier = new Guid("b781e00f-e3dc-4f16-8481-85e2d86d1896"),
                            Category = "productivity",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/firefly-iii-logo.jpeg",
                            IsSecure = false,
                            Name = "Firefly III",
                            Port = 8282,
                            SortOrder = "K",
                            Url = "http://192.168.1.161:8282/"
                        },
                        new
                        {
                            Identifier = new Guid("56968398-cc2b-4015-be0a-d8de4e4835dd"),
                            Category = "system",
                            Host = "192.168.1.1",
                            IconUrl = "./assets/unifi-logo.png",
                            IsSecure = true,
                            Name = "UniFi Controller",
                            Port = 80,
                            SortOrder = "L",
                            Url = "http://192.168.1.1/"
                        },
                        new
                        {
                            Identifier = new Guid("ef43ca8e-0c43-4d8b-8c24-1de0f8720e95"),
                            Category = "system",
                            Host = "192.168.1.48",
                            IconUrl = "./assets/synology-logo.png",
                            IsSecure = false,
                            Name = "Synology Dashboard",
                            Port = 5000,
                            SortOrder = "M",
                            Url = "http://192.168.1.48:5000/"
                        },
                        new
                        {
                            Identifier = new Guid("87fbb4a3-36cf-4df3-97e7-9547be1fbb05"),
                            Category = "system",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/prowlarr-logo.png",
                            IsSecure = false,
                            Name = "Prowlarr",
                            Port = 9696,
                            SortOrder = "N",
                            Url = "http://192.168.1.25:9696/"
                        },
                        new
                        {
                            Identifier = new Guid("8c62bac5-5a44-4391-90b9-8f547ad07e95"),
                            Category = "system",
                            Host = "192.168.1.50",
                            IconUrl = "./assets/pihole-logo.png",
                            IsSecure = false,
                            Name = "PiHole",
                            Port = 80,
                            SortOrder = "O",
                            Url = "http://192.168.1.50/admin/"
                        },
                        new
                        {
                            Identifier = new Guid("86ba5dac-479d-482e-8fdf-49d808c340fd"),
                            Category = "system",
                            Host = "192.168.1.15",
                            IconUrl = "./assets/proxmox-logo.png",
                            IsSecure = true,
                            Name = "Proxmox",
                            Port = 8006,
                            SortOrder = "P",
                            Url = "https://192.168.1.15:8006/"
                        },
                        new
                        {
                            Identifier = new Guid("a28fece4-99cf-435e-853e-2495a4def1c2"),
                            Category = "system",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/influxdb-logo.png",
                            IsSecure = false,
                            Name = "InfluxDB",
                            Port = 8086,
                            SortOrder = "Q",
                            Url = "http://192.168.1.161:8086/"
                        },
                        new
                        {
                            Identifier = new Guid("9cd7c963-d670-4a29-900f-67e639d0901e"),
                            Category = "system",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/grafana-logo.png",
                            IsSecure = false,
                            Name = "Grafana",
                            Port = 3000,
                            SortOrder = "R",
                            Url = "http://192.168.1.161:3000/"
                        },
                        new
                        {
                            Identifier = new Guid("0df7512d-f790-47d2-99bf-d12ffd704ac7"),
                            Category = "system",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/tautulli-logo.png",
                            IsSecure = false,
                            Name = "Tautulli",
                            Port = 8181,
                            SortOrder = "S",
                            Url = "http://192.168.1.161:8181/"
                        },
                        new
                        {
                            Identifier = new Guid("7c103c67-d549-415c-a0b0-5c024c23e134"),
                            Category = "tools",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/portainer-logo.png",
                            IsSecure = true,
                            Name = "Portainer",
                            Port = 9443,
                            SortOrder = "T",
                            Url = "https://192.168.1.161:9443/"
                        },
                        new
                        {
                            Identifier = new Guid("7482d36b-4fb4-46e6-976d-a2367a5900dd"),
                            Category = "tools",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/flood-logo.png",
                            IsSecure = false,
                            Name = "Flood",
                            Port = 8081,
                            SortOrder = "U",
                            Url = "http://192.168.1.25:8081/"
                        },
                        new
                        {
                            Identifier = new Guid("f4e882d6-7a47-4182-b4e8-2381b6a1d1c4"),
                            Category = "tools",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/nginx-proxy-manager-logo.png",
                            IsSecure = false,
                            Name = "Nginx Proxy Manager",
                            Port = 81,
                            SortOrder = "V",
                            Url = "http://192.168.1.161:81/"
                        },
                        new
                        {
                            Identifier = new Guid("c96e6b55-70d9-4390-ab24-ac20035f87e0"),
                            Category = "tools",
                            Host = "192.168.1.205",
                            IconUrl = "./assets/homebridge-logo.png",
                            IsSecure = false,
                            Name = "Homebridge",
                            Port = 8581,
                            SortOrder = "X",
                            Url = "http://192.168.1.205:8581/"
                        },
                        new
                        {
                            Identifier = new Guid("a87b1de1-15ed-45e0-8338-931e297cb642"),
                            Category = "tools",
                            Host = "192.168.1.254",
                            IconUrl = "./assets/home-assistant-logo.png",
                            IsSecure = false,
                            Name = "Home Assistant",
                            Port = 8123,
                            SortOrder = "Y",
                            Url = "http://192.168.1.254:8123/"
                        },
                        new
                        {
                            Identifier = new Guid("d9368244-c297-49de-a5df-8f646f097e10"),
                            Category = "tools",
                            Host = "192.168.1.50",
                            IconUrl = "./assets/phoscon-logo.jpeg",
                            IsSecure = false,
                            Name = "Phoscon",
                            Port = 8080,
                            SortOrder = "Z",
                            Url = "http://192.168.1.50:8080/"
                        },
                        new
                        {
                            Identifier = new Guid("a1a50633-dbac-4ede-abdb-c85f550b320b"),
                            Category = "tools",
                            Host = "192.168.1.161",
                            IconUrl = "./assets/uptime-kuma-logo.png",
                            IsSecure = false,
                            Name = "Uptime Kuma",
                            Port = 3001,
                            SortOrder = "ZA",
                            Url = "http://192.168.1.161:3001/"
                        },
                        new
                        {
                            Identifier = new Guid("9c9a4325-5f56-46f4-a2b0-2308ed4a3de9"),
                            Category = "tools",
                            Host = "192.168.1.25",
                            IconUrl = "./assets/tdarr-logo.png",
                            IsSecure = false,
                            Name = "Tdarr",
                            Port = 8265,
                            SortOrder = "ZB",
                            Url = "http://192.168.1.25:8265/"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
